
<!DOCTYPE html>
<html>
<head>
  <title>JGC Youth Service Group Mapping</title>
  <%= stylesheet_link_tag :all %>
  <%= javascript_include_tag :defaults %>
  <%= csrf_meta_tag %>

    <script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAzr2EBOXUKnm_jVnk0OJI7xSosDVG8KKPE1-m51RBrvYughuyMxQ-i1QfUnH94QxWIa6N4U6MouMmBA" type="text/javascript"></script>
           
    <script type="text/javascript">
 
    var map = null;
    var geocoder = null;
    var trafficInfo = null;
    var directions = null;

    var programs = null;
    var traffic_status = 1;
	
    function initialize() {
      if (GBrowserIsCompatible()) {
        map = new GMap2(document.getElementById("map_canvas"));
        map.setCenter(new GLatLng(37.4419, -122.1419), 13);

        /*GEvent.addListener(map, "click", function(overlay,latlng) {
          if (latlng) {
            var myHtml = "The GPoint value is: " + map.fromLatLngToDivPixel(latlng) + " at zoom level " + map.getZoom();
            map.openInfoWindow(latlng, myHtml);
          }
        });*/
        map.addControl(new GSmallMapControl());
        map.addControl(new GMapTypeControl());

        geocoder = new GClientGeocoder();
        var trafficoptions = {incidents:true};
        trafficInfo = new GTrafficOverlay(trafficoptions);
        map.addOverlay(trafficInfo);
        directionsPanel = document.getElementById("route");
        directions = new GDirections(map, directionsPanel);
      }
    }

    function drawNearbyPrograms() {
      programs = new Array();
      index = 0;
      <% for program in @nearbyPrograms %>
        programs[index] = "<%=program.name%>" //full description of what is to be displayed on this marker
        index++;
      <% end %>
      index = 0;

      <%for program in @nearbyPrograms %>
        geocoder.getLocations("<%=program.address1%>", addToMap);
      <%end%>
    }

    var index = 0;
    function addToMap(response)
    {
      if(response.Status.code == 200)
      {
        // Retrieve the object
        place = response.Placemark[0];
        var city = place.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName;
        var state = place.AddressDetails.Country.AdministrativeArea.AdministrativeAreaName;
        var zip = place.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.PostalCode.PostalCodeNumber;
        //var streetAddress = place.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.Thoroughfare.ThoroughfareName;


        // Retrieve the latitude and longitude
        point = new GLatLng(place.Point.coordinates[1], place.Point.coordinates[0]);

        // Create a marker
        marker = new GMarker(point);
        // Add the marker to map
        map.addOverlay(marker);

        // Add name of program to marker and bind address found by geocoder (not address in database)
        moarker.bindInfoWindowHtml('<span style="font-size: 8pt; font-family: serif;">' + programs[index] + '<br>' + response.Placemark[0].address + '</span>');
      }
      index++;
    }

    function showAddress(address) {
      if (geocoder) {
        geocoder.getLatLng(
          address,
          function(point) {
            if (!point) {
              alert(address + " not found");
            } else {
              map.setCenter(point, 13); //recenters map on address
              markeroptions = {clickable:true, draggable:false };
              var marker = new GMarker(point, markeroptions);
              map.addOverlay(marker); //adds marker to map

              marker.bindInfoWindowHtml('<form method="get" action="http://www.google.com/search"> <div style="border:1px solid black;padding:4px;width:20em;"> <table border="0" cellpadding="0"> <tr><td> <input type="text"   name="q" size="25" maxlength="255" value="" /> <input type="submit" value="Google Search" /></td></tr> <tr><td align="center" style="font-size:75%"> <input type="checkbox" name="sitesearch" value="stanford.edu" checked /> only search Stanford.edu<br /> </td></tr></table> </div> </form>');

              //marker.bindInfoWindowHtml(address); 
              GEvent.addListener(marker, "click", function() {
                map.panTo(point, 2);
              });
            }
          }
        );
      }
    }

    function toggleTraffic() {
      if (traffic_status == 1) {
        map.removeOverlay(trafficInfo);
        traffic_status = 0;
      } else {
        map.addOverlay(trafficInfo);
        traffic_status = 1;
      }
    }

    function setDirections(fromAddress, toAddress) {
      directions.load("from: " + fromAddress + " to: " + toAddress);
      //directions.load("from: " + fromAddress + " to: " + toAddress, {travelMode:G_TRAVEL_MODE_WALKING});
    }

    </script>


</head>
<body onload="initialize()" onunload="GUnload()">
<% if flash[:notice] -%>
  <div id="error_explanation">
    <%= flash[:notice] %>
  </div>
<% end %>

<%= yield %>

</body>
</html>
